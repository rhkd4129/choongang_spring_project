<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- com.oracle.s202350101.뒤에 매핑하고 싶은 모델쓰면 됩니다 
	 mapper 여러개 쓰셔도 됩니다. -->


<mapper namespace="com.oracle.s202350101.ClassRoomMapper">
	<!-- ClassRoom -->
	<!--ClassRoom	생성-->
	<insert id="saveClassRoom" parameterType="ClassRoom">
		insert into class_room
		values ((SELECT COUNT(class_id) + 1 FROM class_room), #{class_room_num}, #{class_start_date}, #{class_end_date}, #{class_master}, #{class_name}, #{class_area})
	</insert>
<!--모든 강의실 조회-->
	<select id="findAllClassRoom" resultType="ClassRoom">
		select *
		from class_room
	</select>
<!--//	강의실 id를 기준으로 삭제_Class-->
	<update id="updateUsInfobyUsClassId" parameterType="ClassRoom">
		update user_info set del_status=1
		where class_id = #{class_id}
	</update>
<!--지역별 강의실 조회 ( 이대, 강남 )-->
	<select id="findAreaClassRoom" parameterType="ClassRoom" resultType="ClassRoom">
		select *
		from class_room
		where class_area = #{class_area}
	</select>
<!--ClassRoom	개수-->
	<select id="cntClassRoom" resultType="int">
		select count(class_id)
		from class_room
	</select>
<!--강의실 id를 기준으로 삭제-->
	<delete id="deletebyId" parameterType="ClassRoom">
		delete class_room
		where class_id = #{class_id}
	</delete>




	<delete id="deleteUsInfobyUsClassId" parameterType="ClassRoom">
		delete user_info
		where class_id = #{class_id}
	</delete>
	<delete id="deleteTodobyClassId" parameterType="ClassRoom">
		DELETE FROM todo T
		WHERE T.user_id in  (
			SELECT ui.user_id
			FROM user_info ui
			WHERE ui.class_id = #{class_id}
		)
	</delete>
	<delete id="deleteUsEnvbyClassId" parameterType="ClassRoom">
		delete from USER_ENV ue
		where ue.user_id in
			  (
				  SELECT ui.user_id
				  FROM user_info ui
				  WHERE ui.class_id = #{class_id}
			  )
	</delete>
</mapper>
	 
