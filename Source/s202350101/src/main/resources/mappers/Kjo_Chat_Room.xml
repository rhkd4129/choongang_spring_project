<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- com.oracle.s202350101.뒤에 매핑하고 싶은 모델쓰면 됩니다 
	 mapper 여러개 쓰셔도 됩니다. -->


<mapper namespace="com.oracle.s202350101.ChatRoomMapper">
	<!-- ChatRoom -->
<!--모든 채팅방 조회-->
	<select id="findAllchatroom" resultType="ChatRoom">
		select * from chat_room
	</select>
<!--개인별 채팅방 조회-->
	<select id="findByUserId" parameterType="UserInfo" resultType="ChatRoom">
        select chl.*, uil.*
        from (select * from chat_room
              where sender_id = #{user_id}
              union
              select * from chat_room
              where receiver_id = #{user_id}) chl
		 left join user_info uil
				   on chl.receiver_id = uil.user_id
    </select>
<!--상대방과의 채팅방 조회-->
	<select id="findByYouAndMe" parameterType="ChatRoom" resultType="ChatRoom">
		select * from chat_room where
			receiver_id=#{receiver_id} and sender_id = #{sender_id}
		union
		select * from chat_room where
			receiver_id=#{sender_id} and sender_id = #{receiver_id}
	</select>
<!--시퀀스 적용해 채팅방 저장, 시퀀스 값 반환-->
	<insert id="addChatRoom" parameterType="ChatRoom" keyProperty="chat_room_id">
		<selectKey keyProperty="chat_room_id" resultType="int" order="BEFORE">
			SELECT NVL(seq_chat_room_id.NEXTVAL, 0) FROM DUAL
		</selectKey>
		insert into chat_room values (#{chat_room_id}, #{sender_id}, #{receiver_id})
	</insert>

	<!--사용자가 접속중인 채팅방의 최신 메시지-->
	<select id="findMyChatRoomCurrMsg" parameterType="ChatRoom" resultType="ChatRoom">
		select * from
					 chat_msg cm, (
				select cr.chat_room_id, max(cm.msg_id) msg_id
				from(
						select * from chat_room
						where sender_id = #{sender_id}
						union
						select * from chat_room
						where receiver_id = #{sender_id}
					) cr join chat_msg cm
							  on cr.chat_room_id = cm.chat_room_id
				group by cr.chat_room_id) ta
		where cm.chat_room_id = ta.chat_room_id
		  and cm.msg_id = ta.msg_id;
	</select>


</mapper>
	 
