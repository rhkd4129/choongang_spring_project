<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- com.oracle.s202350101.뒤에 매핑하고 싶은 모델쓰면 됩니다 
	 mapper 여러개 쓰셔도 됩니다. -->
	 
<mapper namespace="com.oracle.s202350101.BdFreeMapper">

	<!--                          notify                            -->
	
	<!-- notify_게시글 총 갯수 -->
	<select id="cyBdFreeTotal" resultType="int">
	 	select Count(*) from bd_free where bd_category like '공%'
	</select>
	
	
	<!-- notify_추천수 가장 높은 row 3개 -->
	<select id="cyGoodList" resultType="BdFree">
		<![CDATA[	
			SELECT *
			FROM   (
			         select    u.user_name, b.*
			         from      user_info u, bd_free b
			         where     bd_category like '공%'
			         and       u.user_id(+) = b.user_id
			         order by  good_count desc  
			         )
			where  rownum <= 3
		]]>	
	</select>


	<!-- notify_전체 리스트 -->
	<select id="cyBdFreeList" parameterType="BdFree" resultType="BdFree">
		<![CDATA[
			select *
			from 
			    (
			        select rownum rn, a.*
			        from 
			            (   select  u.user_name, b.*
			                from    user_info u, bd_free b
			                where   u.user_id(+) = b.user_id
			                and     bd_category like '공%'
			            ) a
			    )
			where  rn >= #{start} 
			and    rn <= #{end}    
		]]>
	</select>
	
	
	<!-- notify_새 글 입력 -->
	<insert id="cyBdFreeInsert" parameterType="BdFree">
		insert into  Bd_Free  (doc_no,                       user_id,  app_id,  create_date,   bd_category,   subject,     doc_body,   bd_count, good_count,  attach_name, 	    attach_path)
			           values (SEQ_BD_FREE_DOC_NO.nextval , #{user_id},  1,       sysdate     , '공지'     , #{subject},   #{doc_body},    0,             0,    #{attach_name} ,  #{attach_path} )
	</insert>
										

	<!-- notify_상세내역 -->
	<select id="cybdFreeContent" parameterType="BdFree" resultType="BdFree">
		select  u.user_name, b.*
		from    user_info u, bd_free b  
		where   u.user_id(+) = b.user_id
		and     bd_category like '공%'
		and     doc_no = #{doc_no}
	</select>
	
	
	<!-- notify_조회수 -->
	<update id="cyBdCount">
		update Bd_Free set bd_count = bd_count + 1 where doc_no = #{doc_no}
	</update>
	
	
	<!-- notify_수정              나중에 파일 수정할 수 있게 하기!!!!!!!!!!!!!  -->
	<update id="cybdFreeUpdate2" parameterType="BdFree">
		update  bd_free
		set     subject = #{subject}, doc_body = #{doc_body}, modify_date = sysdate
		where   doc_no  = #{doc_no}
	</update>


	<!-- notify_삭제 -->
	<delete id="cyboardDelete" parameterType="int">
		delete from bd_free where doc_no = #{doc_no}
	</delete>

	
	<!-- notify_추천 +1 -->
	<update id="cyGoodCount" parameterType="int">
		UPDATE bd_free SET GOOD_COUNT = GOOD_COUNT + 1 WHERE doc_no = #{doc_no}
	</update>
	
	
	<!-- notify_추천 보이게 -->
	<select id="cyGoodCountView" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select good_count from bd_free where doc_no = #{doc_no}
	</select>


	<!--                          event                            -->
	
	
	<!-- event_리스트 총 갯수 --> 
	<select id="cyEventTotal" parameterType="BdFree" resultType="int">
		select Count(*) from bd_free where bd_category like '이벤%'
	</select>

	
	<!-- event_리스트 : 페이징 작업 안 한 상태!!!!!!!!!!!!!!! -->
	<select id="cyEventList" parameterType="BdFree" resultType="BdFree">
		<![CDATA[	
				select *
				from ( 
				        select rownum rn, a.*
				        from (
				                select    u.user_name, b.*
                                from      user_info u, bd_free b
                                where     u.user_id = b.user_id
                                and       bd_category like '이%'
                                order by  b.create_date desc
				            ) a
					 )
				where   rn >= #{start}
				and     rn <= #{end}
		]]>	
	</select>
	
	
	<!-- event_추천수 가장 높은 row 3개 -->
	<select id="cyEventGoodList" resultType="BdFree">
		<![CDATA[
			select *
			from (
			        select    u.user_name, b.*
			        from      user_info u, bd_free b
			        where     u.user_id(+) = b.user_id
			        and       bd_category like '이%'
			        order by  good_count desc
			    )
			where rownum <= 3
		]]>    
	</select>
	
	
	<!-- event_상세 -->
	<select id="cyEventContent" parameterType="BdFree" resultType="BdFree">
		select  u.user_name, b.*
		from    user_info u, bd_free b 
		where   u.user_id(+) = b.user_id
		and     b.bd_category like '이%'
		and     doc_no = #{doc_no}
	</select>
	
	
	<!-- event_조회수 -->
	<update id="cyEventCount" parameterType="BdFree">
		update bd_free set bd_count = bd_count + 1 where doc_no = #{doc_no}
	</update>
	
	
	<!-- event_새 글 입력 -->
	<insert id="cyEventInsert" parameterType="BdFree">
		insert into bd_free (doc_no,                      user_id,   app_id,   create_date,  bd_category,     subject,       doc_body,     bd_count,  good_count,    attach_name,     attach_path)
                     values (seq_bd_free_doc_no.nextval, #{user_id},    1    ,   sysdate,     '이벤트',      #{subject} ,   #{doc_body},     0     ,     0   ,       #{attach_name},   #{attach_path} )
	</insert>
	
	
	<!-- event_수정       나중에 파일 수정할 수 있게 하기!!!!!!!!!!!!!  -->
	<update id="cyEventUpdate" parameterType="BdFree">
		update   bd_free
		set      subject = #{subject}, doc_body = #{doc_body}, modify_date = sysdate
		where    doc_no  = #{doc_no}
	</update>
	
	
	<!-- event_삭제 -->
	<delete id="cyEventDelete" parameterType="BdFree">
		delete from bd_free where doc_no = #{doc_no}
	</delete>
	
	
	<!-- event_댓글 리스트 -->
	<select id="cyEventComt" parameterType="BdFree" resultType="BdFreeComt">
		select   u.user_name, c.*
		from     user_info u, bd_free b, bd_free_comt c
		where    u.user_id = b.user_id
		and      b.doc_no  = c.doc_no
		and      bd_category like '이%'
		and      b.doc_no  = #{doc_no}
	</select>
	
	
	<!-- event_댓글 입력 -->
	<insert id="cyAjaxInsert" parameterType="BdFreeComt">
		INSERT INTO bd_free_comt   (doc_no, comment_doc_no, user_id, create_date, comment_context, alarm_flag)
						VALUES     (
									   #{doc_no},
									   NVL((SELECT MAX(comment_doc_no) + 1 FROM bd_free_comt), 0),
									   #{user_id},
									   sysdate,
									   #{comment_context},
								 	   'N'
									)
	</insert>
	
	
	<!-- event_입력한 댓글 갖고 오기 -->
	<select id="cyComtSelect" parameterType="BdFreeComt" resultType="BdFreeComt">
		select u.user_name, b.*
		from   bd_free_comt b, user_info u 
		where  b.user_id = u.user_id  
		and    doc_no = #{doc_no}
	</select>
	
	
	<!--                          free                            -->
	
	
	<!-- free_총 갯수 -->
	<select id="cyFreeTotal" resultType="int">
		select Count(*) from bd_free where bd_category like '자%'
	</select>
	
	
	<!-- free_추천수 가장 높은 row 3개 -->
	<select id="cyFreeList" resultType="BdFree">
		<![CDATA[	
			select *
			from 
			        ( 
			             select     u.user_name, b.* 
			             from       user_info u, bd_free b
			             where      u.user_id = b.user_id
			             and        b.bd_category like '자%'
			             order by   good_count desc
			         )
			where     rownum <= 3
		]]>	
	</select>
	
	
	<!-- free_전체 리스트 -->
	<select id="cyTotalList" parameterType="BdFree" resultType="BdFree">
		<![CDATA[	
				select *
				from ( 
				        select rownum rn, a.*
				        from (
				                select    b.*, u.user_name
				                from      bd_free b, user_info u
				                where     b.user_id = u.user_id(+)  
				                and       bd_category like '자%'
				                order by  b.create_date desc
				            ) a
					 )
				where   rn >= #{start}
				and     rn <= #{end}
			]]>	
	</select>
	
	
	<!-- free_상세 -->
	<select id="cyFreeContent" parameterType="java.lang.Integer" resultType="BdFree">
		select  u.user_name, b.*
		from    user_info u, bd_free b 
		where   u.user_id = b.user_id
		and     b.bd_category like '자%'
		and     b.doc_no = #{doc_no}
	</select>
	
	
	<!-- free_조회수 -->
	<update id="cyFreeCount" parameterType="BdFree">
		update   bd_free  
		set      bd_count = + 1
		where    doc_no = #{doc_no}
	</update>
	
	
	<!-- free_댓글리스트 -->
	<select id="cyFreeComtList" parameterType="int" resultType="BdFree">
		select   u.user_name, c.*
		from     user_info u, bd_free b, bd_free_comt c
		where    u.user_id = b.user_id
		and      b.doc_no  = c.doc_no
		and      bd_category like '자%'
		and      b.doc_no = #{doc_no}
	</select>
	
	
	<!-- free_댓글 입력 -->
	<insert id="cyAjaxFreeComtInsert" parameterType="BdFreeComt">
		INSERT INTO bd_free_comt   (doc_no, comment_doc_no, user_id, create_date, comment_context, alarm_flag)
						VALUES     (
									   #{doc_no},
									   NVL((SELECT MAX(comment_doc_no) + 1 FROM bd_free_comt), 0),
									   #{user_id},
									   sysdate,
									   #{comment_context},
								 	   'N'
									)
	</insert>
	
	
	<!-- free_입력한 댓글 갖고 옴 -->
	<select id="cyAjaxComtSelect" parameterType="BdFreeComt" resultType="BdFreeComt">
		select   c.*, u.user_name
		from     bd_free_comt c, user_info u
		where    c.user_id = u.user_id
		and      doc_no = #{doc_no}
	</select>
	
	
	<!-- free_추천 +1 -->	
	<update id="cyFreeCountUp" parameterType="int">
		update   bd_free 
		set      good_count = good_count + 1
		where    doc_no = #{doc_no}
	</update>
	
	
	<!-- free_올린 추천수 갖고 오기  -->	
	<select id="cyFreeCountGet" parameterType="int" resultType="int">
		select    good_count
		from      bd_free
		where     doc_no = #{doc_no}
	</select>
	
	
	<!-- free_새 글 입력 -->
	<insert id="cyFreeInsert" parameterType="BdFree">
		insert into bd_free (doc_no,                         user_id,    app_id, create_date,  bd_category,  subject,      doc_body,    good_count,      attach_name,     attach_path)
                    values  (SEQ_BD_FREE_DOC_NO.nextval,    #{user_id},    1,     sysdate,      '자유',      #{subject},   #{doc_body},      0       ,   #{attach_name},  #{attach_path} )
	</insert>
	

	<!-- free_수정       나중에 파일 수정할 수 있게 하기!!!!!!!!!!!!!  -->
	<update id="cyFreeUpdate" parameterType="BdFree">
		update   bd_free
		set      subject = #{subject}, doc_body = #{doc_body}, modify_date = sysdate
		where    doc_no  = #{doc_no}
	</update>
	
	
	<!-- free_삭제 -->
	<delete id="cyFreeDelete" parameterType="BdFree">
		delete from bd_free where doc_no = #{doc_no}            
	</delete>
	
	
	
	
	
	
	
	
	
	
	


</mapper>

