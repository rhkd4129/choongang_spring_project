* 로그인
[요구사항 분석]
1. 사용자는 ID와 비밀번호를 입력하여 로그인할 수 있어야 함
2. 로그인 성공 시, 사용자의 정보가 세션에 저장되어 다른 페이지에서도 로그인 상태를 유지할 수 있어야 함
3. 로그인 세션이 없는 유저가 사이트 내에 접속하면 접속하지 못하도록 막아야함
[설계]
1. 로그인 폼 화면을 구현하여 사용자에게 ID와 비밀번호를 입력할 수 있도록 설계
2. 입력 받은 정보를 서버로 전송하고, 서버의 응답에 따라 성공 또는 실패 메시지를 표시 하도록 할 계획
3. DB에서 입력된 ID와 비밀번호를 확인하여 로그인 여부를 판단 할 것
4. 로그인 성공 시, 세션에 사용자 정보를 저장
5. InterCeptor를 이용하거나, Spring Security를 이용하여 접속을 차단

[구현]
1. 프론트엔드는 HTML, CSS, JavaScript를 사용하여 로그인 폼을 구현
2. 백엔드는 SpringBoot 프레임워크를 사용하여 구현
3. Interceptor의 preHandle 메서드를 활용하여 로그인 세션의 존재 여부를 먼저 체크하도록 구현 

[테스트]
로그인이 정상적으로 작동하는지 확인하기 위해 유효한 ID와 비밀번호, 그리고 잘못된 ID 또는 비밀번호를 사용하여 각각 테스트한다.

*회원가입
[요구사항 분석]
1. 사용자는 필수 정보(아이디, 비밀번호, 이메일 등)를 입력하여 회원가입을 진행할 수 있어야 함.
2. 입력한 정보의 유효성을 검사하고, 중복된 아이디나 이메일 등이 없는지 확인할 수 있어야함.
3. 회원가입을 위해서는 이용 약관에 동의해야 합니다.
4. 필수 항목 외에 선택적인 약관도 제공하여 사용자에게 선택권을 부여합니다.
5. 가입 전, 이메일 인증이나 SMS 인증 등을 통해 사용자 신원을 확인하는 추가적인 단계를 도입 할 수도있음
[설계]
1. 회원가입 폼 화면을 구현하여 사용자가 필요한 정보를 입력할 수 있도록 한다.
2. 이용 약관 동의 체크박스 및 링크 또는 스크롤 바를 제공하여 사용자가 약관에 동의할 수 있게 한다.
3. 입력된 정보의 유효성을 검사하고, 중복된 아이디나 이메일을 확인 하도록 설계
4. 이메일 인증 프로세스를 도입하여 회원가입 시 인증번호를 입력하게끔 한다.
[구현]
1. 로그인시 유효성 검사는 Controller에서, 회원가입시 유효성 검사는 Bean Validation에서, 
회원정보 수정시 유효성 검사는 JavaScript를 이용하여 구현한다.
2. 이메일 인증 구현은 SMTP(Send Mail Transport protocol) 메일 전송 객체를 이용하여 인증번호를 발송한다.

[테스트]
모든 필수 항목과 선택 항목이 올바르게 입력되었을 때 회원가입이 정상적으로 이루어지는지 확인
중복된 아이디나 이메일 등의 상황에서 올바른 에러 메시지가 표시되는지 확인
정상적으로 이메일 인증이나 SMS 인증이 이루어지는지 확인

* 내 글 모음
[요구사항 분석]
1. 사용자는 자신이 작성한 댓글 목록을 확인할 수 있어야함
2. 목록에서는 각 댓글의 내용, 작성일, 해당 댓글이 달린 게시글 등이 표시되어야 함
3. 내글 모음 목록에서 검색기능을 삽입하여 편의성 제공
[설계]
1. 관리를 용의하게 하기 위해 데이터베이스에 원글 테이블과 댓글 테이블을 따로 두어 관리함
2. 댓글마다 댓글 번호를 PK와 FK를 이용하여 복합키를 달아서 내가 쓴 댓글 클릭시 이동할수 있도록 설계
3. 각 댓글에 링크를 제공하여 해당 댓글이 달린 게시글로 이동할 수 있도록 함 그리고 해당하는 댓글로 곧바로 이동하도록 함
4. 어플리케이션 정보 테이블을 따로두어 내가 쓴 게시글이 SELECT될 때 게시판을 구분 할수있도록 함.
5. 게시판마다 검색이 필요하기 때문에 DB에 검색분류 테이블을 따로 두어 게시판 분류를 로직화
[구현]
1. 조건에 따라 게시판 목록 페이지를 구현
2. 댓글로 이동하기위해 자바 스크립트의 offset() 메소드로 선택한 태그의 위치를 반환 해주고 animate()를 이용해서 선택한 태그의 스크롤 위치를 지정해서 해당 위치로 이동시킴
[테스트]
1. 유저 정보에 맞는 내가 쓴 게시글, 댓글, 추천 목록이 정확히 뜨는지 확인